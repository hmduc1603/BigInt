{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/algorithms"]}],"metadata":{"roleHeading":"Article","title":"Algorithms","role":"article","modules":[{"name":"BigInt"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"kind":"article","seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/References"],"generated":true}],"abstract":[{"text":"Some of the algorithms used in BigInt are described below","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"},"primaryContentSections":[{"kind":"content","content":[{"text":"","type":"heading","level":2,"anchor":""},{"text":"Multiplication","anchor":"Multiplication","type":"heading","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Schonhage-Strassen FFT based algorithm for numbers above 384000 bits","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"ToomCook-3 algorithm for numbers above 12800 bits","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Karatsuba algorithm for numbers above 6400 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basecase - Knuth algorithm M"}]}]}]},{"text":"Division and Remainder","anchor":"Division-and-Remainder","type":"heading","level":3},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Burnikel-Ziegler algorithm for divisors above 3840 bits provided the dividend has at least 3840 bits more than the divisor"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Basecase - Knuth algorithm D","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Exact Division - Jebelean’s exact division algorithm"}]}]}],"type":"unorderedList"},{"type":"heading","level":3,"text":"Greatest Common Divisor","anchor":"Greatest-Common-Divisor"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Recursive GCD algorithm 9.4.6 from [CRANDALL] for numbers with more than 128000 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase for smaller numbers"}]}]}]},{"type":"heading","anchor":"Extended-Greatest-Common-Divisor","text":"Extended Greatest Common Divisor","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase"}]},{"type":"heading","anchor":"Modular-Exponentiation","text":"Modular Exponentiation","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction for exponents with fewer than 2048 bits"},{"type":"text","text":" "},{"type":"text","text":"and Montgomery reduction for larger exponents"}]},{"level":3,"text":"Inverse Modulus","type":"heading","anchor":"Inverse-Modulus"},{"type":"paragraph","inlineContent":[{"text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7,","type":"text"},{"text":" ","type":"text"},{"text":"else it is computed via the extended GCD algorithm","type":"text"}]},{"type":"heading","anchor":"Square-Root","level":3,"text":"Square Root"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase"}]},{"type":"heading","level":3,"anchor":"Square-Root-Modulo-a-Prime-Number","text":"Square Root Modulo a Prime Number"},{"type":"paragraph","inlineContent":[{"text":"Algorithm 2.3.8 from [CRANDALL]","type":"text"}]},{"type":"heading","text":"Prime Number Test","level":3,"anchor":"Prime-Number-Test"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Miller-Rabin test"}]},{"type":"heading","anchor":"Prime-Number-Generation","text":"Prime Number Generation","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The algorithm from Java BigInteger translated to Swift"}]},{"type":"heading","level":3,"text":"Factorial","anchor":"Factorial"},{"inlineContent":[{"type":"text","text":"The "},{"code":"SplitRecursive","type":"codeVoice"},{"text":" algorithm from Peter Luschny: ","type":"text"},{"type":"reference","identifier":"https:\/\/www.luschny.de","isActive":true}],"type":"paragraph"},{"type":"heading","level":3,"text":"Fibonacci","anchor":"Fibonacci"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"fastDoubling"},{"text":" algorithm from Project Nayuki: ","type":"text"},{"type":"reference","identifier":"https:\/\/www.nayuki.io","isActive":true}],"type":"paragraph"},{"text":"Jacobi and Kronecker symbols","anchor":"Jacobi-and-Kronecker-symbols","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Algorithm 2.3.5 from [CRANDALL]","type":"text"}]},{"level":3,"anchor":"Bernoulli-Numbers","type":"heading","text":"Bernoulli Numbers"},{"inlineContent":[{"text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic","type":"text"},{"type":"text","text":" "},{"text":"but no fraction arithmetic","type":"text"}],"type":"paragraph"},{"anchor":"Chinese-Remainder-Theorem","text":"Chinese Remainder Theorem","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"The Garner algorithm 2.1.7 from [CRANDALL]"}],"type":"paragraph"}]}],"references":{"doc://BigInt/documentation/BigInt":{"abstract":[{"text":"Signed integers and fractions of unbounded size","type":"text"}],"kind":"symbol","url":"\/documentation\/bigint","type":"topic","role":"collection","identifier":"doc:\/\/BigInt\/documentation\/BigInt","title":"BigInt"},"https://www.luschny.de":{"url":"https:\/\/www.luschny.de","title":"https:\/\/www.luschny.de","identifier":"https:\/\/www.luschny.de","type":"link","titleInlineContent":[{"text":"https:\/\/www.luschny.de","type":"text"}]},"doc://BigInt/documentation/BigInt/AboutCRT":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","role":"article","type":"topic","abstract":[{"text":"Chinese Remainder Theorem","type":"text"}],"kind":"article","title":"About CRT","url":"\/documentation\/bigint\/aboutcrt"},"doc://BigInt/documentation/BigInt/References":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","role":"article","type":"topic","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"kind":"article","title":"References","url":"\/documentation\/bigint\/references"},"https://www.nayuki.io":{"type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/www.nayuki.io"}],"identifier":"https:\/\/www.nayuki.io","title":"https:\/\/www.nayuki.io","url":"https:\/\/www.nayuki.io"},"doc://BigInt/documentation/BigInt/AboutBFraction":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction","role":"article","type":"topic","abstract":[{"text":"Signed fractions with numerator and denominator of unbounded size","type":"text"}],"kind":"article","title":"About BFraction","url":"\/documentation\/bigint\/aboutbfraction"},"doc://BigInt/documentation/BigInt/AboutBInt":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt","role":"article","type":"topic","abstract":[{"text":"Signed integers of unbounded size","type":"text"}],"kind":"article","title":"About BInt","url":"\/documentation\/bigint\/aboutbint"},"doc://BigInt/documentation/BigInt/Performance":{"url":"\/documentation\/bigint\/performance","type":"topic","role":"article","abstract":[{"text":"Execution times for certain BigInt operations","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","kind":"article","title":"Performance"}}}