{"identifier":{"url":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"anchor":"","text":"","type":"heading","level":2},{"text":"Multiplication","type":"heading","anchor":"Multiplication","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Schonhage-Strassen FFT based algorithm for numbers with more than 384.000 bits","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"ToomCook-3 algorithm for numbers with more than 12.800 bits","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Karatsuba algorithm for numbers with more than 6.400 bits"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Basecase - Knuth algorithm M","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","anchor":"Division-and-Remainder","text":"Division and Remainder","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Burnikel-Ziegler algorithm for divisors with more than 3.840 bits provided the dividend has at least 3.840 bits more than the divisor"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Basecase - Knuth algorithm D"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Exact Division - Jebelean’s exact division algorithm"}],"type":"paragraph"}]}]},{"level":3,"anchor":"Greatest-Common-Divisor","type":"heading","text":"Greatest Common Divisor"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Recursive GCD algorithm 9.4.6 from [CRANDALL] for numbers with more than 128.000 bits","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2 for smaller numbers, with binary GCD basecase"}],"type":"paragraph"}]}]},{"level":3,"type":"heading","text":"Extended Greatest Common Divisor","anchor":"Extended-Greatest-Common-Divisor"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Recursive GCD algorithm 9.4.6 from [CRANDALL] for numbers with more than 64.000 bits, with extra logic to track cofactors","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2 and exercise 18 for smaller numbers","type":"text"}]}]}]},{"text":"Modular Exponentiation","type":"heading","level":3,"anchor":"Modular-Exponentiation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction for exponents with fewer than 2.048 bits"},{"type":"text","text":" "},{"text":"and Montgomery reduction for larger exponents","type":"text"}]},{"text":"Inverse Modulus","type":"heading","level":3,"anchor":"Inverse-Modulus"},{"inlineContent":[{"text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"else it is computed via the extended GCD algorithm"}],"type":"paragraph"},{"type":"heading","text":"Square Root","level":3,"anchor":"Square-Root"},{"inlineContent":[{"type":"text","text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase"}],"type":"paragraph"},{"level":3,"anchor":"Square-Root-Modulo-a-Prime-Number","type":"heading","text":"Square Root Modulo a Prime Number"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Algorithm 2.3.8 from [CRANDALL]"}]},{"type":"heading","level":3,"text":"Random Numbers","anchor":"Random-Numbers"},{"type":"paragraph","inlineContent":[{"text":"Random BInt numbers are generated using the cryptographically secure function ","type":"text"},{"code":"SecRandomCopyBytes","type":"codeVoice"}]},{"type":"heading","text":"Prime Number Test","anchor":"Prime-Number-Test","level":3},{"inlineContent":[{"text":"Miller-Rabin test","type":"text"}],"type":"paragraph"},{"text":"Prime Number Generation","anchor":"Prime-Number-Generation","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The algorithm from Java BigInteger translated to Swift"}]},{"anchor":"Factorial","type":"heading","text":"Factorial","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SplitRecursive","type":"codeVoice"},{"text":" algorithm from Peter Luschny: ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/www.luschny.de"}]},{"anchor":"Fibonacci","level":3,"text":"Fibonacci","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"fastDoubling","type":"codeVoice"},{"text":" algorithm from Project Nayuki: ","type":"text"},{"isActive":true,"identifier":"https:\/\/www.nayuki.io","type":"reference"}]},{"level":3,"type":"heading","anchor":"Jacobi-and-Kronecker-symbols","text":"Jacobi and Kronecker symbols"},{"type":"paragraph","inlineContent":[{"text":"Algorithm 2.3.5 from [CRANDALL]","type":"text"}]},{"level":3,"type":"heading","anchor":"Bernoulli-Numbers","text":"Bernoulli Numbers"},{"type":"paragraph","inlineContent":[{"text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"but no fraction arithmetic"}]},{"level":3,"type":"heading","anchor":"Chinese-Remainder-Theorem","text":"Chinese Remainder Theorem"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Garner algorithm 2.1.7 from [CRANDALL]"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/algorithms"]}],"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/References"],"generated":true}],"metadata":{"role":"article","roleHeading":"Article","title":"Algorithms","modules":[{"name":"BigInt"}]},"references":{"doc://BigInt/documentation/BigInt":{"title":"BigInt","url":"\/documentation\/bigint","kind":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}],"role":"collection","type":"topic"},"doc://BigInt/documentation/BigInt/AboutBFraction":{"abstract":[{"type":"text","text":"Signed fractions with numerator and denominator of unbounded size"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction","kind":"article","type":"topic","url":"\/documentation\/bigint\/aboutbfraction","title":"About BFraction","role":"article"},"doc://BigInt/documentation/BigInt/AboutBInt":{"url":"\/documentation\/bigint\/aboutbint","title":"About BInt","abstract":[{"type":"text","text":"Signed integers of unbounded size"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt","kind":"article","role":"article","type":"topic"},"doc://BigInt/documentation/BigInt/Performance":{"abstract":[{"type":"text","text":"Execution times for certain BigInt operations"}],"title":"Performance","role":"article","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","kind":"article","url":"\/documentation\/bigint\/performance"},"doc://BigInt/documentation/BigInt/AboutCRT":{"role":"article","kind":"article","title":"About CRT","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","url":"\/documentation\/bigint\/aboutcrt","type":"topic"},"https://www.luschny.de":{"url":"https:\/\/www.luschny.de","identifier":"https:\/\/www.luschny.de","type":"link","title":"https:\/\/www.luschny.de","titleInlineContent":[{"text":"https:\/\/www.luschny.de","type":"text"}]},"https://www.nayuki.io":{"type":"link","identifier":"https:\/\/www.nayuki.io","title":"https:\/\/www.nayuki.io","titleInlineContent":[{"text":"https:\/\/www.nayuki.io","type":"text"}],"url":"https:\/\/www.nayuki.io"},"doc://BigInt/documentation/BigInt/References":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"kind":"article","type":"topic","url":"\/documentation\/bigint\/references","title":"References","role":"article"}}}