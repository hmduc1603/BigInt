{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/Algorithms"},"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"seeAlsoSections":[{"generated":true,"title":"Articles","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/BigInt\/documentation\/BigInt\/Performance","doc:\/\/BigInt\/documentation\/BigInt\/References"]}],"sections":[],"kind":"article","metadata":{"role":"article","title":"Algorithms","roleHeading":"Article","modules":[{"name":"BigInt"}]},"abstract":[{"text":"Some of the algorithms used in BigInt are described below","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/algorithms"]}],"primaryContentSections":[{"content":[{"anchor":"","type":"heading","level":2,"text":""},{"type":"heading","text":"Multiplication","anchor":"Multiplication","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Schonhage-Strassen FFT based algorithm for numbers above 384000 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"ToomCook-3 algorithm for numbers above 12800 bits","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Karatsuba algorithm for numbers above 6400 bits"}]}]},{"content":[{"inlineContent":[{"text":"Basecase - Knuth algorithm M","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Division and Remainder","anchor":"Division-and-Remainder","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Burnikel-Ziegler algorithm for divisors above 3840 bits provided the dividend has at least 3840 bits more than the divisor"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Basecase - Knuth algorithm D","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Exact Division - Jebelean’s exact division algorithm","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","level":3,"text":"Greatest Common Divisor","anchor":"Greatest-Common-Divisor"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Recursive GCD algorithm 9.4.6 from [CRANDALL] for numbers with more than 128000 bits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase for smaller numbers","type":"text"}]}]}],"type":"unorderedList"},{"text":"Extended Greatest Common Divisor","type":"heading","level":3,"anchor":"Extended-Greatest-Common-Divisor"},{"type":"paragraph","inlineContent":[{"text":"Lehmer’s algorithm [KNUTH] chapter 4.5.2, with binary GCD basecase","type":"text"}]},{"level":3,"text":"Modular Exponentiation","anchor":"Modular-Exponentiation","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Sliding window algorithm 14.85 from [HANDBOOK] using Barrett reduction for exponents with fewer than 2048 bits","type":"text"},{"text":" ","type":"text"},{"text":"and Montgomery reduction for larger exponents","type":"text"}]},{"type":"heading","level":3,"anchor":"Inverse-Modulus","text":"Inverse Modulus"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the modulus is a (not too large) power of 2, the algorithm from [KOC] section 7,"},{"text":" ","type":"text"},{"type":"text","text":"else it is computed via the extended GCD algorithm"}]},{"text":"Square Root","level":3,"anchor":"Square-Root","type":"heading"},{"inlineContent":[{"text":"Algorithm 1.12 (SqrtRem) from [BRENT] with algorithm 9.2.11 from [CRANDALL] as basecase","type":"text"}],"type":"paragraph"},{"anchor":"Square-Root-Modulo-a-Prime-Number","text":"Square Root Modulo a Prime Number","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Algorithm 2.3.8 from [CRANDALL]","type":"text"}]},{"type":"heading","level":3,"text":"Prime Number Test","anchor":"Prime-Number-Test"},{"type":"paragraph","inlineContent":[{"text":"Miller-Rabin test","type":"text"}]},{"type":"heading","anchor":"Prime-Number-Generation","level":3,"text":"Prime Number Generation"},{"inlineContent":[{"text":"The algorithm from Java BigInteger translated to Swift","type":"text"}],"type":"paragraph"},{"text":"Factorial","level":3,"type":"heading","anchor":"Factorial"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SplitRecursive"},{"type":"text","text":" algorithm from Peter Luschny: "},{"type":"reference","identifier":"https:\/\/www.luschny.de","isActive":true}],"type":"paragraph"},{"anchor":"Fibonacci","level":3,"type":"heading","text":"Fibonacci"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"fastDoubling","type":"codeVoice"},{"text":" algorithm from Project Nayuki: ","type":"text"},{"identifier":"https:\/\/www.nayuki.io","type":"reference","isActive":true}]},{"anchor":"Jacobi-and-Kronecker-symbols","text":"Jacobi and Kronecker symbols","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Algorithm 2.3.5 from [CRANDALL]"}],"type":"paragraph"},{"text":"Bernoulli Numbers","anchor":"Bernoulli-Numbers","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"Computed via Tangent numbers which is fast because it only involves integer arithmetic"},{"type":"text","text":" "},{"text":"but no fraction arithmetic","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Chinese Remainder Theorem","level":3,"anchor":"Chinese-Remainder-Theorem"},{"inlineContent":[{"type":"text","text":"The Garner algorithm 2.1.7 from [CRANDALL]"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://BigInt/documentation/BigInt/Performance":{"abstract":[{"text":"Execution times for certain BigInt operations","type":"text"}],"type":"topic","role":"article","title":"Performance","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/Performance","kind":"article","url":"\/documentation\/bigint\/performance"},"doc://BigInt/documentation/BigInt/AboutBInt":{"type":"topic","url":"\/documentation\/bigint\/aboutbint","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBInt","abstract":[{"text":"Signed integers of unbounded size","type":"text"}],"title":"About BInt","kind":"article","role":"article"},"doc://BigInt/documentation/BigInt/AboutCRT":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutCRT","url":"\/documentation\/bigint\/aboutcrt","role":"article","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}],"title":"About CRT","kind":"article","type":"topic"},"doc://BigInt/documentation/BigInt":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt","title":"BigInt","url":"\/documentation\/bigint","kind":"symbol","type":"topic","role":"collection","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}]},"doc://BigInt/documentation/BigInt/References":{"abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"type":"topic","role":"article","title":"References","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/References","kind":"article","url":"\/documentation\/bigint\/references"},"doc://BigInt/documentation/BigInt/AboutBFraction":{"abstract":[{"text":"Signed fractions with numerator and denominator of unbounded size","type":"text"}],"type":"topic","role":"article","title":"About BFraction","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/AboutBFraction","kind":"article","url":"\/documentation\/bigint\/aboutbfraction"},"https://www.nayuki.io":{"url":"https:\/\/www.nayuki.io","identifier":"https:\/\/www.nayuki.io","type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/www.nayuki.io"}],"title":"https:\/\/www.nayuki.io"},"https://www.luschny.de":{"type":"link","url":"https:\/\/www.luschny.de","titleInlineContent":[{"type":"text","text":"https:\/\/www.luschny.de"}],"title":"https:\/\/www.luschny.de","identifier":"https:\/\/www.luschny.de"}}}